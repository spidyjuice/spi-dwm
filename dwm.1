.TH SPIDWM 1 dwm\-VERSION+!
.SH NAME
dwm \- dynamic window manager (spidyjuice edition!!!)
.SH SYNOPSIS
.B dwm
.RB [ \-v ]
.SH SPIDWM FLAVOR PECULIARITIES
.P
Welcome to spidwm, the centerpiece of spi-de! Thank you for checking the man page,
I will try to describe what's unique about this build of dwm to the best of my
ability, starting with a list of dependancies that many hotkey presses will call to:
.P
a whole list of scripts that can be found at \/\/https:\/\/www.github.com\/spidyjuice, 
scrot, dmenu, xdotool, st.
.P
every exact time an external command is called is mentioned down in the Keyboard commands
sub-section of the USAGE section. And here is a list of common dwm patches that are applied:
.P
fibonacci-20200418-c82db69, dwm-single_tagset-20160731-56a31dc, dwm-switchtotag-6.2,
dwm-focusadjacenttag-6.0, dwm-switchtotag-6.2.
.P
I've tried to maintain a high value of minimalism, but I find these very useful.
the size of the space around the text in the bar is also reduced to 0 px instead of 2.
.P
The keybindings are minorly derivative of vim bindings. I will try to accurately describe
them all in the USAGE section but here is a short overview. MOD+I/O switches to the
next tag over. MOD+J/K switches focus between windows. MOD+N/M focuses different
monitors. MOD+Enter spawns an st terminal, MOD+Shift+Enter spawns dmenu_run.
.P
Broadly speaking, a lot of navigation shortcuts happen on the right side of a
qwerty keyboard, and a lot of the application launches happen on the left and
with an aditional Shift press. This was not a dichotomy I set out to create,
 it's just the result of what I found most comfortable. The greater part of the
left side without the shift press is not bound to very much... Also, with the
right scripts and setup, MOD+Control C, V, and B toggle your compositor, redshift,
and bar.
.SH REGULAR DWM DESCRIPTION
dwm is a dynamic window manager for X. It manages windows in tiled, monocle
and floating layouts. Either layout can be applied dynamically, optimising the
environment for the application in use and the task performed.
.P
In tiled layouts windows are managed in a master and stacking area. The master
area on the left contains one window by default, and the stacking area on the
right contains all other windows. The number of master area windows can be
adjusted from zero to an arbitrary number. In monocle layout all windows are
maximised to the screen size. In floating layout windows can be resized and
moved freely. Dialog windows are always managed floating, regardless of the
layout applied.
.P
Windows are grouped by tags. Each window can be tagged with one or multiple
tags. Selecting certain tags displays all windows with these tags.
.P
Each screen contains a small status bar which displays all available tags, the
layout, the title of the focused window, and the text read from the root window
name property, if the screen is focused. A floating window is indicated with an
empty square and a maximised floating window is indicated with a filled square
before the windows title.  The selected tags are indicated with a different
color. The tags of the focused window are indicated with a filled square in the
top left corner.  The tags which are applied to one or more windows are
indicated with an empty square in the top left corner.
.P
dwm draws a small border around windows to indicate the focus state.
.SH OPTIONS
.TP
.B \-v
prints version information to stderr, then exits.
.SH USAGE .SS Status bar
.TP
.B X root window name
is read and displayed in the status text area. It can be set with the
.BR xsetroot (1)
command.
.TP
.B Button1
click on a tag label to display all windows with that tag, click on the layout
label toggles between tiled and floating layout.
.TP
.B Button3
click on a tag label adds/removes all windows with that tag to/from the view.
.TP
.B Mod4\-Button1
click on a tag label applies that tag to the focused window.
.TP
.B Mod4\-Button3
click on a tag label adds/removes that tag to/from the focused window.
.SS Navigation shortcuts	
.TP
.B Mod4\-j/k
focus on window left (down stack) or right (up stack).
.TP
.B Mod4\-i/o
focus on the tag to the left or right of currently focused tag (only works if just one tag is selected).
.TP
.B Mod4\-n/m
focus on the next or previous monitor screen.
.TP
.B Mod4\-Tab
focus on the previously selected tag(s).
.SS Navigation and tag manipulation
.TP
.B Mod4\-[1\-9]
focus on tag #n.
.TP
.B Mod4\-0/`
focus on all tags.
.TP
.B Mod4\-Control\-[Tag]
select tag(s) without deselecting the currently focused tag.
.TP
.B Mod4\-Shift\-[Tag]
Move the focused window to the new tag(s).
.SS Window manipulation
.TP
.B Mod4\-h/l
increment or decrement the master window size.
.TP
.B Mod4\-'
toggle between floating and fibinocci (tiling) layout.
.TP
.B Mod4\-,/.
decrease or increase the ammount of windows that fit in the master window position (obsolete in the fibinocci layout).
.TP
.B Mod4\-;
toggle floating behavior for the focused window.
.TP
.B Mod4\-g
raise focused window to the top of the stack.
.SS Menus
.TP
.B Mod4\-p
calls dmenu_passty, a password quickmenu that works with pass and xdotool to type passwords without using any clipboard.
.TP
.B Mod4\-\\
calls dmenu_sys, quick access to system tools like network management and mounting.
.TP
.B Mod4\-c
calls dmenu_clipmenu, which really just calls clipmenu...
.TP
.B Mod4\-r
calls dmenu_druglog, a tool for keeping a simple log of medicinal intake.
.TP
.B Mod4\-t
calls dmenu_todo, derivative of the simple "todo" dmenu script, with the addition of a couple spi-de features.
.TP
.B Mod4\-Escape
calls dmenu_rest, options to shut off the display(s), close the x session, call for a system shutdown, and the like.
.SS Miscellaneous functions
.TP
.B Mod4\-a
simulates a middle mouse click with an xdotool command.
.TP
.B Mod4\-s
takes a snapshot of the screen with scrot.
.SS Volume controls (with external scripts calling amixer commands) 
.TP
.B Mod4\-Up/Down
vol-up, vol-dwn, slide the master output volume up or down.
.TP
.B Mod4\-Right
vol-tog, toggle the master output mute or unmute.
.TP
.B Mod4\-Left
mic-tog, toggle the microphone input mute or unmute.
.SS Shortcuts
.TP
.B Mod4\-Enter
spawn st.
.TP
.B Mod4\-Shift\-w
call launch-web, a script for launching web browsers with conditions.
.TP
.B Mod4\-Shift\-c
call launch-chat -d, a script for launching chat clients with conditions, with an optional dmenu.
.TP
.B Mod4\-Shift\-e
launch claws-mail.
.TP
.B Mod4\-Shift\-g
call launch-game, a script with a dmenu for launching various video games out of one menu.
.TP
.B Mod4\-Shift\-m
call rest-display, cutting power to the monitor.
.SS Settings
.TP
.B Mod4\-Control\-b
toggles the visibility of the dwm bar.
.TP
.B Mod4\-Control\-c
calls compositor-switch, toggling the compositor on or off.
.TP
.B Mod4\-Control\-r
calls red-switch, toggling redshift on or off.
.TP
.B Mod4\-Control\-Delete
quits the window manager.
.SS Mouse commands
.TP
.B Mod4\-Button1
Move focused window while dragging. Tiled windows will be toggled to the floating state.
.TP
.B Mod4\-Button3
Resize focused window while dragging. Tiled windows will be toggled to the floating state.
.SH CUSTOMIZATION
dwm is customized by creating a custom config.h and (re)compiling the source
code. This keeps it fast, secure and simple.
.SH SEE ALSO
.BR dmenu (1),
.BR st (1)
.SH ISSUES
Java applications which use the XToolkit/XAWT backend may draw grey windows
only. The XToolkit/XAWT backend breaks ICCCM-compliance in recent JDK 1.5 and early
JDK 1.6 versions, because it assumes a reparenting window manager. Possible workarounds
are using JDK 1.4 (which doesn't contain the XToolkit/XAWT backend) or setting the
environment variable
.BR AWT_TOOLKIT=MToolkit
(to use the older Motif backend instead) or running
.B xprop -root -f _NET_WM_NAME 32a -set _NET_WM_NAME LG3D
or
.B wmname LG3D
(to pretend that a non-reparenting window manager is running that the
XToolkit/XAWT backend can recognize) or when using OpenJDK setting the environment variable
.BR _JAVA_AWT_WM_NONREPARENTING=1 .
.SH BUGS
Send all bug reports with a patch to hackers@suckless.org.
